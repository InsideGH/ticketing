apiVersion: skaffold/v2alpha3
kind: Config
deploy:
  # Telling skaffold that there are kubernetes files.
  # Watch files, and re-apply.
  # Will make sure to create all object when we start skaffold.
  # Will also delete all objects when we stop skaffold. (clean cluster)
  kubectl:
    manifests:
      - ./infra/k8s/*
      - ./infra/k8s-dev/*
# Default skaffold tries to push to docker hub.
build:
  local:
    push: false
  # Tell skaffold that it needs to maintain
  artifacts:
    # Auth
    - image: insidedocker/auth
      # There is pod running code from auth directory
      # When there is a change in the source files, skaffold will try update pod
      context: auth
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          - src: "src/**/*.ts"
            # dot means that dest uses same path as src
            dest: .
    # Client
    - image: insidedocker/client
      # There is pod running code from client directory
      # When there is a change in the source files, skaffold will try update pod
      context: client
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          # Or next app
          - src: "**/*.js"
            # dot means that dest uses same path as src
            dest: .
    # Tickets
    - image: insidedocker/tickets
      # There is pod running code from tickets directory
      # When there is a change in the source files, skaffold will try update pod
      context: tickets
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          - src: "src/**/*.ts"
            # dot means that dest uses same path as src
            dest: .
    # Orders
    - image: insidedocker/orders
      # There is pod running code from orders directory
      # When there is a change in the source files, skaffold will try update pod
      context: orders
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          - src: "src/**/*.ts"
            # dot means that dest uses same path as src
            dest: .
    # Expiration
    - image: insidedocker/expiration
      # There is pod running code from expiration directory
      # When there is a change in the source files, skaffold will try update pod
      context: expiration
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          - src: "src/**/*.ts"
            # dot means that dest uses same path as src
            dest: .
    # Payments
    - image: insidedocker/payments
      # There is pod running code from payments directory
      # When there is a change in the source files, skaffold will try update pod
      context: payments
      docker:
        # Way 2: if any other file changes, rebuild the image
        dockerfile: Dockerfile
      sync:
        manual:
          # Way 1: if a js file changes, copy the file into the pod!
          # Then having webpack running inside the container will then build for example
          # Or nodemon
          # Or create react app
          - src: "src/**/*.ts"
            # dot means that dest uses same path as src
            dest: .
